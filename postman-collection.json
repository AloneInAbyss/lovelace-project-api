{
	"info": {
		"_postman_id": "47fe9fcd-6f6a-4747-8008-1eee9b842afe",
		"name": "Lovelace Project API",
		"description": "API endpoints for testing authentication",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20907742"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"item": [
						{
							"name": "Register (1)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"john\",\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/auth/register",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"auth",
										"register"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Login",
					"item": [
						{
							"name": "Login (1-1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parse the response JSON",
											"let jsonData;",
											"try {",
											"    jsonData = pm.response.json();",
											"} catch (e) {",
											"    pm.test(\"Response is valid JSON\", function () {",
											"        pm.expect.fail(\"Response body is not valid JSON\");",
											"    });",
											"}",
											"",
											"// Save the 'token' field as a collection variable if present",
											"if (jsonData && jsonData.token) {",
											"    pm.collectionVariables.set(\"jwt_token\", jsonData.token);",
											"    pm.test(\"Token is saved as collection variable\", function () {",
											"        pm.expect(pm.collectionVariables.get(\"jwt_token\")).to.eql(jsonData.token);",
											"    });",
											"} else {",
											"    pm.test(\"Token field exists in response\", function () {",
											"        pm.expect(jsonData && jsonData.token, \"Token field is missing in response\").to.be.ok;",
											"    });",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identity\": \"admin\",\n  \"password\": \"admin123\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/api/auth/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response JSON",
									"let jsonData;",
									"try {",
									"    jsonData = pm.response.json();",
									"} catch (e) {",
									"    pm.test(\"Response is valid JSON\", function () {",
									"        pm.expect.fail(\"Response body is not valid JSON\");",
									"    });",
									"}",
									"",
									"// Save the new 'token' field as a collection variable if present",
									"if (jsonData && jsonData.token) {",
									"    pm.collectionVariables.set(\"jwt_token\", jsonData.token);",
									"    pm.test(\"New token is saved as collection variable\", function () {",
									"        pm.expect(pm.collectionVariables.get(\"jwt_token\")).to.eql(jsonData.token);",
									"    });",
									"} else {",
									"    pm.test(\"Token field exists in response\", function () {",
									"        pm.expect(jsonData && jsonData.token, \"Token field is missing in response\").to.be.ok;",
									"    });",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/api/auth/refresh",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Email",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/auth/verify-email?token=b61fbc9e-c420-42af-86e1-4c10c31f2fc4",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"verify-email"
							],
							"query": [
								{
									"key": "token",
									"value": "b61fbc9e-c420-42af-86e1-4c10c31f2fc4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Resend Verification",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"john@example.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/auth/resend-verification",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"resend-verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forgot Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john@example.com\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}/api/auth/forgot-password",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"forgot-password"
							]
						},
						"description": "Request a password reset email. Check your email or application logs for the reset token."
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"<paste-token-from-email>\",\n  \"newPassword\": \"NewSecure123!\",\n  \"confirmPassword\": \"NewSecure123!\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}/api/auth/reset-password",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"reset-password"
							]
						},
						"description": "Complete the password reset using the token received via email. Password must be at least 8 characters with uppercase, lowercase, number, and special character."
					},
					"response": []
				}
			]
		},
		{
			"name": "Games",
			"item": [
				{
					"name": "Search Games",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/games/search?q=catan&page=0&size=10",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"games",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "catan"
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						},
						"description": "Search for board games (public endpoint)"
					},
					"response": []
				},
				{
					"name": "Get Game Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/games/1",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"games",
								"1"
							]
						},
						"description": "Get details of a specific game (public endpoint)"
					},
					"response": []
				},
				{
					"name": "Get Game Listings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/games/1/listings?page=0&size=10",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"games",
								"1",
								"listings"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						},
						"description": "Get listings for a specific game (public endpoint)"
					},
					"response": []
				}
			]
		},
		{
			"name": "Wishlist",
			"item": [
				{
					"name": "Get Wishlist",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/wishlist?page=0&size=10&sortBy=addedAt",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"wishlist"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "sortBy",
									"value": "addedAt"
								}
							]
						},
						"description": "Get the authenticated user's wishlist with pagination"
					},
					"response": []
				},
				{
					"name": "Add to Wishlist",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"gameId\": \"123456\",\n  \"notes\": \"Want to buy this!\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}/api/wishlist",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"wishlist"
							]
						},
						"description": "Add a game to the wishlist"
					},
					"response": []
				},
				{
					"name": "Update Wishlist Item",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"notes\": \"Updated notes about this game\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}/api/wishlist/123456",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"wishlist",
								"123456"
							]
						},
						"description": "Update notes for a wishlist item"
					},
					"response": []
				},
				{
					"name": "Check if Game in Wishlist",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/wishlist/check/123456",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"wishlist",
								"check",
								"123456"
							]
						},
						"description": "Check if a specific game is in the user's wishlist"
					},
					"response": []
				},
				{
					"name": "Remove from Wishlist",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/wishlist/123456",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"wishlist",
								"123456"
							]
						},
						"description": "Remove a game from the wishlist"
					},
					"response": []
				},
				{
					"name": "Get Wishlist Count",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/wishlist/count",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"wishlist",
								"count"
							]
						},
						"description": "Get the total count of items in the wishlist"
					},
					"response": []
				},
				{
					"name": "Clear Wishlist",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/wishlist/clear",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"wishlist",
								"clear"
							]
						},
						"description": "Clear all items from the wishlist"
					},
					"response": []
				}
			]
		},
		{
			"name": "Actuator",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/actuator/health",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"actuator",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "Metrics",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/actuator/metrics",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"actuator",
								"metrics"
							]
						}
					},
					"response": []
				},
				{
					"name": "Info",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/actuator/info",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"actuator",
								"info"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": ""
		},
		{
			"key": "jwt_token",
			"value": ""
		}
	]
}