{
	"info": {
		"_postman_id": "370d5b37-1fd2-47eb-ac81-3ee870f23dfe",
		"name": "Lovelace Project API",
		"description": "API endpoints for testing authentication",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20907742"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}/api/auth/register",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response JSON",
									"let jsonData;",
									"try {",
									"    jsonData = pm.response.json();",
									"} catch (e) {",
									"    pm.test(\"Response is valid JSON\", function () {",
									"        pm.expect.fail(\"Response body is not valid JSON\");",
									"    });",
									"}",
									"",
									"// Save the 'token' field as a collection variable if present",
									"if (jsonData && jsonData.token) {",
									"    pm.collectionVariables.set(\"jwt_token\", jsonData.token);",
									"    pm.test(\"Token is saved as collection variable\", function () {",
									"        pm.expect(pm.collectionVariables.get(\"jwt_token\")).to.eql(jsonData.token);",
									"    });",
									"} else {",
									"    pm.test(\"Token field exists in response\", function () {",
									"        pm.expect(jsonData && jsonData.token, \"Token field is missing in response\").to.be.ok;",
									"    });",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"john\",\n  \"password\": \"pass123\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}/api/auth/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Endpoints",
			"item": [
				{
					"name": "Public Endpoint",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/test/public",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"test",
								"public"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Endpoint (Protected)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/test/user",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"test",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Endpoint (Protected)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/test/admin",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"test",
								"admin"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Actuator",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/actuator/health",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"actuator",
								"health"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": ""
		},
		{
			"key": "jwt_token",
			"value": ""
		}
	]
}